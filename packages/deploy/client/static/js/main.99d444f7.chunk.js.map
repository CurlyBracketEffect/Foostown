{"version":3,"sources":["material-ui-style.js","apolloClient.js","Login-SignUp/Login.js","Login-SignUp/SignUp.js","Play-Game/UsersAndStats.js","LogoutButton.js","Play-Game/NavBar.js","Play-Game/MatchesPlayed.js","Tournaments/ActiveTournaments.js","Play-Game/HomePage.js","Play-Game/SelectOpponent.js","Play-Game/SnackBar.js","Play-Game/CreateGamePage.js","Tournaments/CreateTournament.js","Tournaments/AvailableSpots.js","Tournaments/SelectYourTeam.js","Tournaments/JoinTournament.js","Tournaments/TeamsInTournament.js","Tournaments/Tournament.js","App.js","serviceWorker.js","index.js"],"names":["install","buildAuthState","csrfToken","authStatus","__typename","id","isLoggedIn","appCache","InMemoryCache","setCSRFToken","writeData","data","localStorage","removeItem","setItem","httpLink","createHttpLink","uri","credentials","fetch","options","token","getItem","headers","Object","objectSpread","Authorization","concat","stateLink","withClientState","cache","defaults","authLink","ApolloLink","operation","forward","filter","response","login","signup","console","log","logout","errors","authError","some","err","extensions","code","apolloClient","ApolloClient","link","from","useStyles","makeStyles","loginContainer","width","margin","display","justifyContent","alignItems","createAccount","color","textDecoration","fontSize","textTransform","fontWeight","inputField","marginBottom","backgroundColor","cssLabel","&$cssFocused","cssFocused","cssUnderline","&:after","borderBottomColor","cssOutlinedInput","&$cssFocused $notchedOutline","borderColor","notchedOutline","submitBtn","marginTop","name","index","LOG_IN","gql","_templateObject","Login","classes","react_default","a","createElement","Box","className","react_apollo_browser_umd","mutation","onError","error","alert","_ref","loginForm","core_index_es","variant","style","formik_esm","initialValues","email","password","onSubmit","values","_ref2","setSubmitting","variables","user","validationSchema","Yup","shape","required","props","touched","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","InputLabelProps","root","focused","InputProps","label","type","value","onChange","onBlur","disabled","Link","to","signupContainer","signIn","SIGN_UP","SignUp_templateObject","SignUp","index_es","signupForm","fullname","UsersAndStats","query","UsersAndStats_templateObject","pollInterval","loading","organization","users","map","key","button","height","listStyle","src","gravatar","url","s","r","d","primary","length","slice","stats","matches_played","goals_for","goals_against","logoutBtn","LogoutMutation","LogoutButton_templateObject","LogoutButton","client","onClick","resetStore","navBar","padding","navBarTitle","imgAvatar","borderRadius","backBtn","NavBar","NavBar_templateObject","viewer","src_LogoutButton","MatchesPlayed","GET_MATCHES","MatchesPlayed_templateObject","fetchPolicy","matchesPlayed","match","match_id","home_team","secondary","away_team","home_goals","away_goals","ActiveTournaments","ActiveTournaments_templateObject","tournaments","tournament","tournament_name","status","homePage","flexDirection","homeTitle","subHeader","borderBottom","homePageList","overflowY","createBtn","tabsContainer","iconTab","HomePage","_useState","useState","_useState2","slicedToArray","setValue","Play_Game_NavBar","iconsContainer","Tabs_default","event","indicatorColor","textColor","Tab_default","icon","Play_Game_UsersAndStats","Play_Game_MatchesPlayed","Tournaments_ActiveTournaments","SelectOpponent","shrink","SelectOpponent_templateObject","input","teams","team","parseInt","team_name","variantIcon","success","CheckCircleIcon","ErrorIcon","useStyles1","theme","green","palette","dark","iconVariant","opacity","marginRight","spacing","unit","message","MySnackbarContentWrapper","onClose","other","objectWithoutProperties","Icon","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","aria-label","close","Close_default","useStyles2","CustomizedSnackbar","open","setSnackBarOpen","handleClose","reason","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","CreateGamePage","snackBarOpen","Redirect","CreateGamePage_templateObject","createMatch","team_id","organization_id","_ref4","_templateObject2","_ref3","Play_Game_SelectOpponent","defineProperty","SnackBar","CreateTourament","CreateTournament_templateObject","number_of_players","createTournament","min","title","AvailableSpots","AvailableSpots_templateObject","border","textDecorationColor","SelectYourTeam","SelectYourTeam_templateObject","JoinTournament","JoinTournament_templateObject","Tournaments_SelectYourTeam","tournamentPage","tournamentTitle","overflow","tournamentPageList","TournamentPage","Tournaments_AvailableSpots","Tournaments_JoinTournament","component","history","createBrowserHistory","createMuiTheme","light","main","contrastText","App","BrowserRouter","styles","App_templateObject","Switch","Route","path","exact","Fragment","CreateTournament","Tournament","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99d444f7.chunk.js","sourcesContent":["import { install } from '@material-ui/styles';\r\n\r\ninstall();","import { onError } from 'apollo-link-error'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { ApolloLink } from 'apollo-link'\r\nimport { withClientState } from 'apollo-link-state'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { setContext } from 'apollo-link-context'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\n\r\nlet apolloClient = null\r\n\r\nconst buildAuthState = csrfToken => ({\r\n  authStatus: {\r\n    __typename: 'authStatus',\r\n    id: 'authValue',\r\n    csrfToken,\r\n    isLoggedIn: csrfToken != null,\r\n  },\r\n})\r\n\r\nconst appCache = new InMemoryCache()\r\n\r\nconst setCSRFToken = csrfToken => {\r\n  appCache.writeData({\r\n    data: buildAuthState(csrfToken),\r\n  })\r\n  if (csrfToken == null) {\r\n    localStorage.removeItem('token')\r\n  } else {\r\n    localStorage.setItem('token', csrfToken)\r\n  }\r\n}\r\n\r\nconst authorizedFetch = (uri, options) => {\r\n  // get the authentication token from local storage if it exists\r\n  // local storage\r\n  const token = localStorage.getItem('token')\r\n\r\n  // return the headers to the context so httpLink can read them\r\n  const headers = {\r\n    ...options.headers,\r\n    Authorization: token ? `Bearer ${token}` : '',\r\n  }\r\n\r\n  return fetch(uri, {\r\n    ...options,\r\n    headers,\r\n  })\r\n}\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n  credentials: 'include',\r\n  fetch: authorizedFetch,\r\n})\r\n\r\nconst stateLink = withClientState({\r\n  cache: appCache,\r\n  // set default state, else you'll get errors when trying to access undefined state\r\n  defaults: buildAuthState(localStorage.getItem('token')),\r\n})\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  const responses = forward(operation)\r\n\r\n  return responses.filter(response => {\r\n    // Handle log in/sign up responses\r\n    const data = response.data || {}\r\n    const { csrfToken } = data.login || data.signup || {}\r\n    if (csrfToken != null) {\r\n      setCSRFToken(csrfToken)\r\n      console.log('logged in')\r\n      // apolloClient.queryManager.broadcastQueries()\r\n    }\r\n    if (data.logout) {\r\n      setCSRFToken(null)\r\n      console.log('logged out')\r\n    }\r\n    // Handle auth errors and filter them out of responses\r\n    if (response.errors == null) {\r\n      return true\r\n    }\r\n    const authError = response.errors.some(err => err.extensions.code === 'UNAUTHENTICATED')\r\n    if (authError) {\r\n      console.log('unauthenticated')\r\n      setCSRFToken(null)\r\n      // apolloClient.queryManager.broadcastQueries()\r\n    }\r\n    return !authError\r\n  })\r\n})\r\n\r\napolloClient = new ApolloClient({\r\n  link: ApolloLink.from([authLink, stateLink, httpLink]),\r\n  cache: appCache,\r\n})\r\n\r\nexport default apolloClient\r\n","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport * as Yup from 'yup'\r\n\r\n// import App from './App.js'\r\n\r\nimport { Mutation } from 'react-apollo'\r\nimport { Link } from 'react-router-dom'\r\nimport { Formik } from 'formik'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { unstable_Box as Box } from '@material-ui/core/Box'\r\nimport { Typography, TextField, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(\r\n  {\r\n    loginContainer: {\r\n      width: 300,\r\n      margin: '0 auto',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    createAccount: {\r\n      color: '#000',\r\n      textDecoration: 'none',\r\n      fontSize: 11,\r\n      textTransform: 'uppercase',\r\n      fontWeight: 500,\r\n    },\r\n    inputField: {\r\n      width: 250,\r\n      marginBottom: 20,\r\n      backgroundColor: '#FFF',\r\n    },\r\n    cssLabel: {\r\n      '&$cssFocused': {\r\n        color: '#007900',\r\n      },\r\n    },\r\n    cssFocused: {},\r\n    cssUnderline: {\r\n      '&:after': {\r\n        borderBottomColor: '#007900',\r\n      },\r\n    },\r\n    cssOutlinedInput: {\r\n      '&$cssFocused $notchedOutline': {\r\n        borderColor: '#007900',\r\n      },\r\n    },\r\n    notchedOutline: {},\r\n    submitBtn: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      marginTop: 15,\r\n    },\r\n  },\r\n  { name: 'hello_worlkd_wtf', index: 10 }\r\n)\r\n\r\nconst LOG_IN = gql`\r\n  mutation loginMutation($user: LoginInput!) {\r\n    login(input: $user) {\r\n      user {\r\n        id\r\n        fullname\r\n        email\r\n      }\r\n      csrfToken\r\n    }\r\n  }\r\n`\r\n\r\nconst Login = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Box className={classes.loginContainer}>\r\n      <Mutation\r\n        mutation={LOG_IN}\r\n        onError={error => {\r\n          alert(error)\r\n        }}\r\n      >\r\n        {(login, { data }) => (\r\n          <div className={classes.loginForm}>\r\n            <Typography\r\n              variant=\"overline\"\r\n              style={{ fontSize: 16, color: '#00aa25', fontWeight: 'bold' }}\r\n            >\r\n              Login\r\n            </Typography>\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                password: '',\r\n              }}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                //alert(JSON.stringify(values, null, 2));\r\n                login({ variables: { user: values } })\r\n                setSubmitting(false)\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                  .email()\r\n                  .required('required'),\r\n                password: Yup.string()\r\n                  .required('required'),\r\n              })}\r\n            >\r\n              {props => {\r\n                const {\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  dirty,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  handleReset,\r\n                } = props\r\n                return (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.cssLabel,\r\n                          focused: classes.cssFocused,\r\n                        },\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          root: classes.cssOutlinedInput,\r\n                          focused: classes.cssFocused,\r\n                          notchedOutline: classes.notchedOutline,\r\n                        },\r\n                      }}\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      margin=\"normal\"\r\n                      variant=\"outlined\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={`{\r\n                      ${classes.inputField}\r\n                      ${errors.email && touched.email ? 'text-input error' : 'text-input'}\r\n                    }`}\r\n                    />{' '}\r\n                    <br />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"input-feedback\">{errors.email}</div>\r\n                    )}\r\n                    <TextField\r\n                      InputLabelProps={{\r\n                        classes: {\r\n                          root: classes.cssLabel,\r\n                          focused: classes.cssFocused,\r\n                        },\r\n                      }}\r\n                      InputProps={{\r\n                        classes: {\r\n                          root: classes.cssOutlinedInput,\r\n                          focused: classes.cssFocused,\r\n                          notchedOutline: classes.notchedOutline,\r\n                        },\r\n                      }}\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      margin=\"normal\"\r\n                      variant=\"outlined\"\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={`{\r\n                      ${classes.inputField}\r\n                      ${errors.password && touched.password ? 'text-input error' : 'text-input'}\r\n                    }`}\r\n                    />{' '}\r\n                    <br />\r\n                    {errors.email && touched.email && (\r\n                      <div className=\"input-feeback\">{errors.password}</div>\r\n                    )}\r\n                    <Box className={classes.submitBtn}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        className=\"outline\"\r\n                        disabled={isSubmitting}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        submit\r\n                      </Button>\r\n\r\n                      <Link to=\"/sign-up\" className={classes.createAccount}>\r\n                        create an account\r\n                      </Link>\r\n                    </Box>\r\n                  </form>\r\n                )\r\n              }}\r\n            </Formik>\r\n          </div>\r\n        )}\r\n      </Mutation>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport * as Yup from 'yup'\r\n\r\nimport { Mutation } from 'react-apollo'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Formik } from 'formik'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { unstable_Box as Box } from '@material-ui/core/Box'\r\nimport { Typography, TextField, Button } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  signupContainer: {\r\n    width: 500,\r\n    margin: '0 auto',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  signIn: {\r\n    color: '#000',\r\n    textDecoration: 'none',\r\n    fontSize: 11,\r\n    textTransform: 'uppercase',\r\n    fontWeight: 500,\r\n  },\r\n  inputField: {\r\n    width: 250,\r\n    marginBottom: 20,\r\n    backgroundColor: '#FFF',\r\n  },\r\n  cssLabel: {\r\n    '&$cssFocused': {\r\n      color: '#007900',\r\n    },\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    '&:after': {\r\n      borderBottomColor: '#007900',\r\n    },\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: '#007900',\r\n    },\r\n  },\r\n  notchedOutline: {},\r\n  submitBtn: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginTop: 15,\r\n  },\r\n})\r\n\r\nconst SIGN_UP = gql`\r\n  mutation signupMutation($user: NewUserInput!) {\r\n    signup(input: $user) {\r\n      user {\r\n        id\r\n        fullname\r\n        email\r\n      }\r\n      csrfToken\r\n    }\r\n  }\r\n`\r\n\r\nconst SignUp = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <ThemeProvider>\r\n      <Box className={classes.signupContainer}>\r\n        <Mutation\r\n          mutation={SIGN_UP}\r\n          onError={error => {\r\n            alert(error)\r\n          }}\r\n        >\r\n          {(signup, { data }) => (\r\n            <div className={classes.signupForm}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                style={{ fontSize: 16, color: '#00aa25', fontWeight: 'bold' }}\r\n              >\r\n                Create new account\r\n              </Typography>\r\n              <Formik\r\n                initialValues={{\r\n                  fullname: '',\r\n                  email: '',\r\n                  password: '',\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  //alert(JSON.stringify(values, null, 2));\r\n                  signup({ variables: { user: values } })\r\n                  setSubmitting(false)\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                  email: Yup.string()\r\n                    .email()\r\n                    .required('required'),\r\n                  password: Yup.string()\r\n                    .required('required'),\r\n                })}\r\n              >\r\n                {props => {\r\n                  const {\r\n                    errors,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values,\r\n                  } = props\r\n                  return (\r\n                    <form onSubmit={handleSubmit}>\r\n                      <TextField\r\n                        InputLabelProps={{\r\n                          classes: {\r\n                            root: classes.cssLabel,\r\n                            focused: classes.cssFocused,\r\n                          },\r\n                        }}\r\n                        InputProps={{\r\n                          classes: {\r\n                            root: classes.cssOutlinedInput,\r\n                            focused: classes.cssFocused,\r\n                            notchedOutline: classes.notchedOutline,\r\n                          },\r\n                        }}\r\n                        name=\"fullname\"\r\n                        label=\"Full name\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={values.fullname}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={`{\r\n                      ${classes.inputField}\r\n                      ${classes.fullname && touched.fullname ? 'text-input error' : 'text-input'}\r\n                    }`}\r\n                      />{' '}\r\n                      <br />\r\n                      {errors.fullname && touched.fullname && (\r\n                        <div className=\"input-feedback\">{errors.fullname}</div>\r\n                      )}\r\n                      <TextField\r\n                        InputLabelProps={{\r\n                          classes: {\r\n                            root: classes.cssLabel,\r\n                            focused: classes.cssFocused,\r\n                          },\r\n                        }}\r\n                        InputProps={{\r\n                          classes: {\r\n                            root: classes.cssOutlinedInput,\r\n                            focused: classes.cssFocused,\r\n                            notchedOutline: classes.notchedOutline,\r\n                          },\r\n                        }}\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={`{\r\n                      ${classes.inputField}\r\n                      ${classes.email && touched.email ? 'text-input error' : 'text-input'}\r\n                    }`}\r\n                      />{' '}\r\n                      <br />\r\n                      {errors.email && touched.email && (\r\n                        <div className=\"input-feedback\">{errors.email}</div>\r\n                      )}\r\n                      <TextField\r\n                        InputLabelProps={{\r\n                          classes: {\r\n                            root: classes.cssLabel,\r\n                            focused: classes.cssFocused,\r\n                          },\r\n                        }}\r\n                        InputProps={{\r\n                          classes: {\r\n                            root: classes.cssOutlinedInput,\r\n                            focused: classes.cssFocused,\r\n                            notchedOutline: classes.notchedOutline,\r\n                          },\r\n                        }}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={`{\r\n                      ${classes.inputField}\r\n                      ${errors.password && touched.password ? 'text-input error' : 'text-input'}\r\n                    }`}\r\n                      />{' '}\r\n                      <br />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"input-feedback\">{errors.password}</div>\r\n                      )}\r\n                      <Box className={classes.submitBtn}>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          className=\"outline\"\r\n                          disabled={isSubmitting}\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                        >\r\n                          Create\r\n                        </Button>\r\n\r\n                        <Link to=\"/\" className={classes.signIn}>\r\n                          existing account?\r\n                        </Link>\r\n                      </Box>\r\n                    </form>\r\n                  )\r\n                }}\r\n              </Formik>\r\n            </div>\r\n          )}\r\n        </Mutation>\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Button,\r\n} from '@material-ui/core/'\r\n\r\nimport gravatar from 'gravatar'\r\n\r\nconst UsersAndStats = () => (\r\n  <Query\r\n    query={gql`\r\n      query {\r\n        organization(id: 1) {\r\n          users {\r\n            id\r\n            fullname\r\n            email\r\n            stats {\r\n              matches_played\r\n              goals_for\r\n              goals_against\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    pollInterval={500}\r\n  >\r\n    {({ loading, error, data }) => {\r\n      if (loading) return <div>Loading...</div>\r\n      if (error) {\r\n        throw error\r\n      }\r\n      return data.organization.users.map(user => {\r\n        return (\r\n          <ListItem key={user.id} button style={{ height: '75px', listStyle: 'none' }}>\r\n            {/* {console.log(data)} */}\r\n            <ListItemIcon>\r\n              <img src={gravatar.url(user.email, { s: '75', r: 'x', d: 'retro' }, false)} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              style={{ listStyle: 'none' }}\r\n              primary={\r\n                user.fullname.length > 13 ? user.fullname.slice(0, 13) + '...' : user.fullname\r\n              }\r\n            />\r\n            <ListItemSecondaryAction style={{ listStyle: 'none' }}>\r\n              G.P.: {user.stats.matches_played} <br />\r\n              G.F.: {user.stats.goals_for} <br />\r\n              G.A.: {user.stats.goals_against} <br />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )\r\n      })\r\n    }}\r\n  </Query>\r\n)\r\n\r\nexport default UsersAndStats\r\n","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { Mutation } from 'react-apollo'\r\nimport { Button } from '@material-ui/core/'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  logoutBtn: {\r\n    width: 100,\r\n  },\r\n})\r\n\r\nconst LogoutMutation = gql`\r\n  mutation logoutmutation {\r\n    logout\r\n  }\r\n`\r\n\r\nconst LogoutButton = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Mutation mutation={LogoutMutation}>\r\n      {(logout, { client, loading, error, data }) => {\r\n        if (loading) return <p>Loading...</p>\r\n        if (error) {\r\n          console.log(error)\r\n          return <p>There was an error</p>\r\n        }\r\n        return (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            className={classes.logoutBtn}\r\n            onClick={() => {\r\n              client.resetStore()\r\n              logout()\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        )\r\n      }}\r\n    </Mutation>\r\n  )\r\n}\r\n\r\nexport default LogoutButton\r\n","import React from 'react'\r\n\r\nimport LogoutButton from '../LogoutButton'\r\nimport gravatar from 'gravatar'\r\n\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { unstable_Box as Box } from '@material-ui/core/Box'\r\nimport { Typography, Button } from '@material-ui/core'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nconst useStyles = makeStyles({\r\n  navBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n    padding: 10,\r\n    // height: '10vh'\r\n    // height: 50\r\n  },\r\n  navBarTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  imgAvatar: {\r\n    borderRadius: '50%',\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  backBtn: {\r\n    width: 100,\r\n  },\r\n})\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Query\r\n      query={gql`\r\n        query {\r\n          viewer {\r\n            email\r\n          }\r\n        }\r\n      `}\r\n    >\r\n      {({ loading, error, data }) => {\r\n        if (loading) return <div>Loading...</div>\r\n        if (error) {\r\n          throw error\r\n        }\r\n        console.log(data)\r\n        return (\r\n          <Box className={classes.navBar}>\r\n            <Button className={classes.backBtn} color=\"primary\" variant=\"contained\">\r\n              <i className=\"fas fa-chevron-circle-left\" />\r\n              Back\r\n            </Button>\r\n            <img\r\n              className={classes.imgAvatar}\r\n              src={gravatar.url(data.viewer.email, { s: '75', r: 'x', d: 'retro' }, false)}\r\n            />{' '}\r\n            <LogoutButton />\r\n          </Box>\r\n        )\r\n      }}\r\n    </Query>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nimport { ListItem, ListItemIcon, ListItemText, ListItemSecondaryAction } from '@material-ui/core/'\r\n\r\nconst MatchesPlayed = () => {\r\n  const GET_MATCHES = gql`\r\n    query {\r\n      matchesPlayed {\r\n        home_team\r\n        away_team\r\n        match_id\r\n        home_team_id\r\n        away_team_id\r\n        home_goals\r\n        away_goals\r\n      }\r\n    }\r\n  `\r\n  return (\r\n    <Query query={GET_MATCHES} pollInterval={500} fetchPolicy=\"network-only\">\r\n      {({ loading, error, data }) => {\r\n        if (loading) return <div>Loading...</div>\r\n        if (error) {\r\n          throw error\r\n        }\r\n        return data.matchesPlayed.map(match => {\r\n          return (\r\n            <ListItem key={match.match_id} button style={{ height: '75px' }}>\r\n              <ListItemIcon>Avatar</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  match.home_team.length > 13\r\n                    ? match.home_team.slice(0, 13) + '...'\r\n                    : match.home_team\r\n                }\r\n                secondary={\r\n                  match.away_team.length > 13\r\n                    ? match.away_team.slice(0, 13) + '...'\r\n                    : match.away_team\r\n                }\r\n              />\r\n              <ListItemSecondaryAction>\r\n                G.F.: {match.home_goals} <br />\r\n                G.A.: {match.away_goals} <br />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          )\r\n        })\r\n      }}\r\n    </Query>\r\n  )\r\n}\r\n\r\nexport default MatchesPlayed\r\n","import React from 'react'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n} from '@material-ui/core/'\r\n\r\n//router\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ActiveTournaments = () => (\r\n  <Query\r\n    query={gql`\r\n      query {\r\n        organization(id:1) {\r\n          tournaments {\r\n            id\r\n            tournament_name\r\n            status\r\n          }\r\n        }\r\n      }\r\n    `}\r\n  >\r\n    {({ loading, error, data }) => {\r\n      if (loading) return <div>Loading...</div>\r\n      if (error) {\r\n        throw error\r\n      }\r\n      console.log(data)\r\n      return data.organization.tournaments.map(tournament => {\r\n        return (\r\n          <Link to='/tournament' style={{ textDecoration: 'none', color: 'black' }}>\r\n            <ListItem key={tournament.id} button style={{ height: '75px', listStyle: 'none' }}>\r\n              <ListItemText\r\n              style={{listStyle:'none'}}\r\n                primary={\r\n                  tournament.tournament_name.length > 24 ? tournament.tournament_name.slice(0, 24) + '...' : tournament.tournament_name\r\n                }\r\n              />\r\n              <ListItemSecondaryAction\r\n              style={{listStyle:'none'}}>\r\n                Status:\t&nbsp;\r\n                <span style={{ color: 'green', textTransform: 'uppercase' }}>\r\n                  {tournament.status}\r\n                </span> &nbsp;\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </Link>\r\n        )\r\n      })\r\n    }}\r\n  </Query>\r\n)\r\n\r\nexport default ActiveTournaments","import React, { useState } from 'react'\r\n\r\n//router\r\nimport { BrowserRouter as Router, Route, Redirect, Switch, Link } from 'react-router-dom'\r\n\r\n//components\r\nimport UsersAndStats from './UsersAndStats'\r\nimport NavBar from './NavBar'\r\nimport MatchesPlayed from './MatchesPlayed'\r\nimport ActiveTournaments from '../Tournaments/ActiveTournaments'\r\n\r\n//material-ui\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { unstable_Box as Box } from '@material-ui/core/Box'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { List, Button } from '@material-ui/core/'\r\n\r\nconst useStyles = makeStyles({\r\n  homePage: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  homeTitle: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    fontSize: 16,\r\n    color: '#00aa25',\r\n    fontWeight: 'bold',\r\n  },\r\n  logoutBtn: {\r\n    marginBottom: 25,\r\n    textDecoration: 'none',\r\n  },\r\n  subHeader: {\r\n    borderBottom: '1px solid #00aa25',\r\n    // overflow: 'hidden',\r\n    fontWeight: 'bold',\r\n  },\r\n  homePageList: {\r\n    height: '100%',\r\n    overflowY: 'scroll',\r\n  },\r\n  createBtn: {\r\n    marginTop: 25,\r\n    textDecoration: 'none',\r\n  },\r\n  tabsContainer: {\r\n    // width: 300,\r\n    backgroundColor: '#e1e2e1',\r\n  },\r\n  iconTab: {\r\n    // width: '33%'\r\n  },\r\n})\r\n\r\nconst HomePage = props => {\r\n  const [value, setValue] = useState(0)\r\n  const handleChange = (event, value) => {\r\n    setValue(value)\r\n  }\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.homePage}>\r\n      <NavBar user={''} />\r\n      <Box className={classes.iconsContainer}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"secondary\"\r\n          className={classes.tabsContainer}\r\n        >\r\n          <Tab\r\n            className={classes.iconTab}\r\n            label=\"PLAYERS\"\r\n            icon={<i className=\"fas fa-users\" style={{ color: '#00aa25' }} />}\r\n          />\r\n          <Tab\r\n            className={classes.iconTab}\r\n            label=\"GAMES\"\r\n            icon={<i className=\"fas fa-play-circle\" style={{ color: '#00aa25' }} />}\r\n          />\r\n          <Tab\r\n            className={classes.iconTab}\r\n            label=\"TOURNAMENTS\"\r\n            icon={<i className=\"fas fa-trophy\" style={{ color: '#00aa25' }} />}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {value === 0 && (\r\n        <List className={classes.homePageList}>\r\n          <UsersAndStats />\r\n        </List>\r\n      )}\r\n      {value === 1 && (\r\n        <List className={classes.homePageList}>\r\n          <MatchesPlayed />\r\n          <br />\r\n          <Link className={classes.createBtn} to=\"/create-game\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Create Match\r\n            </Button>\r\n          </Link>\r\n        </List>\r\n      )}\r\n      {value === 2 && (\r\n        <List className={classes.homePageList}>\r\n          <ActiveTournaments />\r\n          <br />\r\n          <Link className={classes.createBtn} to=\"/create-tournament\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Create Tournament\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <Link className={classes.createBtn} to=\"/tournament\">\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Temp. Join Tourney Button\r\n            </Button>\r\n          </Link>\r\n        </List>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\n\r\n//apollo\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { OutlinedInput, InputLabel, Select, MenuItem } from '@material-ui/core/'\r\n\r\nconst SelectOpponent = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <div style={{ margin: '1rem 0', color: 'black', width: 300 }}>\r\n        <InputLabel shrink>Select Opponent</InputLabel>\r\n        <Query\r\n          query={gql`\r\n            query {\r\n              viewer {\r\n                id\r\n                fullname\r\n                teams {\r\n                  id\r\n                  team_name\r\n                }\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <p>Loading...</p>\r\n            if (error) {\r\n              console.log(error)\r\n              throw error\r\n            }\r\n            return (\r\n              <Select\r\n                onChange={onChange}\r\n                value={value}\r\n                style={{ width: '300px' }}\r\n                name=\"team_id\"\r\n                input={<OutlinedInput />}\r\n              >\r\n                {/* {console.log(data.viewer)} */}\r\n                {data.viewer.teams.map(team => (\r\n                  <MenuItem key={team.id} value={parseInt(team.id)}>\r\n                    {team.team_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )\r\n          }}\r\n        </Query>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectOpponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport Button from '@material-ui/core/Button'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport green from '@material-ui/core/colors/green'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  error: ErrorIcon,\r\n}\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}))\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1()\r\n  const { className, message, onClose, variant, ...other } = props\r\n  const Icon = variantIcon[variant]\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classNames(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'error']).isRequired,\r\n}\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n}))\r\n\r\nfunction CustomizedSnackbar({ open, setSnackBarOpen }) {\r\n  const classes = useStyles2()\r\n  /* const [open, setOpen] = React.useState('');*/\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n\r\n    setSnackBarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant=\"success\"\r\n          message=\"Score was submitted!\"\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomizedSnackbar\r\n","import React, { useState } from 'react'\r\n\r\n//router\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\n//formik & yup\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n//apollo\r\nimport { Mutation } from 'react-apollo'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { Typography, FormControl, TextField, Button } from '@material-ui/core/'\r\n\r\n//components\r\nimport SelectOpponent from './SelectOpponent'\r\nimport CustomizedSnackbar from './SnackBar'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\n\r\nconst CreateGamePage = () => {\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false)\r\n  if (snackBarOpen) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Typography style={{ marginTop: 25, marginBottom: 25 }} variant=\"overline\">\r\n        Create Game\r\n      </Typography>\r\n\r\n      <Link style={{ marginBottom: 25, textDecoration: 'none', width: '50%' }} to=\"/\">\r\n        <Button\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Back To Home\r\n        </Button>\r\n      </Link>\r\n\r\n      <Mutation\r\n        onError={error => {\r\n          alert(error)\r\n        }}\r\n        mutation={gql`\r\n          mutation($createMatch: NewMatchInput!) {\r\n            createMatch(input: $createMatch) {\r\n              match_id\r\n              team_id\r\n              goals_for\r\n              goals_against\r\n            }\r\n          }\r\n        `}\r\n      >\r\n        {(createMatch, { loading, error, data }) => {\r\n          if (loading) return <p>Loading...</p>\r\n          if (error) {\r\n            console.log(error)\r\n            return <p>Error :(</p>\r\n          }\r\n\r\n          return (\r\n            <Formik\r\n              initialValues={{\r\n                team_id: '',\r\n                goals_for: '',\r\n                goals_against: '',\r\n                organization_id: 1,\r\n              }}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                console.log(values)\r\n                values = {\r\n                  ...values,\r\n                }\r\n                createMatch({ variables: { createMatch: values } })\r\n                setSubmitting(false)\r\n                setSnackBarOpen(true)\r\n\r\n                console.log('snack_bar_open', snackBarOpen)\r\n              }}\r\n              validationSchema={Yup.object().shape({\r\n                team_id: Yup.number().required('required'),\r\n                goals_for: Yup.number().required('required'),\r\n                goals_against: Yup.number().required('required'),\r\n              })}\r\n            >\r\n              {props => {\r\n                const { handleChange, handleSubmit, isSubmitting, values } = props\r\n                return (\r\n                  <form\r\n                    onSubmit={handleSubmit}\r\n                    style={{\r\n                      marginTop: 50,\r\n                      width: '300px',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <FormControl variant=\"outlined\">\r\n                      <Query\r\n                        query={gql`\r\n                          query {\r\n                            viewer {\r\n                              id\r\n                            }\r\n                          }\r\n                        `}\r\n                      >\r\n                        {({ loading, error, data }) => {\r\n                          if (loading) return <p>Loading...</p>\r\n                          if (error) {\r\n                            console.log(error)\r\n                            return <p>Error :(</p>\r\n                          }\r\n                          return (\r\n                            <SelectOpponent\r\n                              value={parseInt(values.team_id)}\r\n                              onChange={handleChange}\r\n                            />\r\n                          )\r\n                        }}\r\n                      </Query>\r\n                    </FormControl>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: 50,\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                      }}\r\n                    >\r\n                      <TextField\r\n                        name=\"goals_for\"\r\n                        label=\"Your Score\"\r\n                        value={values.goals_for}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        style={{\r\n                          width: '45%',\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n\r\n                      <TextField\r\n                        name=\"goals_against\"\r\n                        label=\"Opponent Score\"\r\n                        value={values.goals_against}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        style={{\r\n                          width: '45%',\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <Link style={{ marginTop: 50, width: '75%', textDecoration: 'none' }} to='/'> */}\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"secondary\"\r\n                      disabled={isSubmitting}\r\n                      variant=\"contained\"\r\n                      style={{\r\n                        width: '100%',\r\n                        width: '75%',\r\n                        marginTop: 50,\r\n                      }}\r\n                    >\r\n                      Submit Scores\r\n                    </Button>\r\n\r\n                    <CustomizedSnackbar open={snackBarOpen} setSnackBarOpen={setSnackBarOpen} />\r\n                    {/* </Link> */}\r\n                  </form>\r\n                )\r\n              }}\r\n            </Formik>\r\n          )\r\n        }}\r\n      </Mutation>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateGamePage\r\n","import React, {useState} from 'react'\r\n\r\n//router\r\nimport { Link } from 'react-router-dom'\r\n\r\n//formik & yup\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n//apollo\r\nimport { Mutation } from 'react-apollo'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { Typography, FormControl, TextField, Button } from '@material-ui/core/'\r\n\r\n//components\r\n// import CustomizedSnackbar from './SnackBar'\r\n\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import SnackbarContent from '@material-ui/core/SnackbarContent';\r\n\r\n\r\nconst CreateTourament = () => {\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false)\r\n  return (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}\r\n  >\r\n    <Typography style={{ marginTop: 25, marginBottom: 25 }} variant=\"overline\">\r\n      Create Tournament\r\n    </Typography>\r\n\r\n    <Link style={{ marginBottom: 25, textDecoration: 'none', width: '50%' }} to=\"/\">\r\n      <Button\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Back To Home\r\n      </Button>\r\n    </Link>\r\n\r\n    <Mutation\r\n      onError={error => {\r\n        alert(error)\r\n      }}\r\n      mutation={gql`\r\n        mutation($createTournament: NewTournamentInput!) {\r\n          createTournament(input: $createTournament) {\r\n            id\r\n            tournament_name\r\n          }\r\n        }\r\n      `}\r\n    >\r\n      {(createMatch, { loading, error, data }) => {\r\n        if (loading) return <p>Loading...</p>\r\n        if (error) {\r\n          console.log(error)\r\n          return <p>Error :(</p>\r\n        }\r\n\r\n        return (\r\n\r\n\r\n          <Formik\r\n            initialValues={{\r\n              tournament_name: '',\r\n              number_of_players: '',\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              console.log(values)\r\n              values = {\r\n                ...values,\r\n              }\r\n              createMatch({ variables: { createTournament: values } })\r\n              setSubmitting(false)\r\n              // setSnackBarOpen(true)\r\n              \r\n              // console.log('snack_bar_open', snackBarOpen)              \r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              tournament_name: Yup.string().required('required'),\r\n              number_of_players: Yup.number()\r\n                .min(8, \"Minimum number of players is 8\")\r\n                .required('required'),\r\n            })}\r\n          >\r\n            {props => {\r\n              const { errors, handleChange, handleSubmit, isSubmitting, values} = props\r\n              return (\r\n                <form\r\n                  onSubmit={handleSubmit}\r\n                  style={{\r\n                    marginTop: 50,\r\n                    width: '300px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n\r\n                  <TextField\r\n                    name=\"tournament_name\"\r\n                    label=\"Tourament Name\"\r\n                    value={values.goals_for}\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <br/><br/>\r\n                  <TextField\r\n                    name=\"number_of_players\"\r\n                    label=\"Number Of Players\"\r\n                    value={values.goals_against}\r\n                    onChange={handleChange}\r\n                    type=\"number\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    className={\r\n                      errors.title \r\n                        ? 'text-input error'\r\n                        : 'text-input'\r\n                    }\r\n                    />\r\n                    {errors.title && (\r\n                      <div>{errors.title}</div>\r\n                    )}\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"secondary\"\r\n                    disabled={isSubmitting}\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      width: '100%',\r\n                      width: '75%',\r\n                      marginTop: 50,\r\n                    }}\r\n                  >\r\n                    Create Tournament\r\n                  </Button>\r\n\r\n                  {/* <CustomizedSnackbar \r\n                    open={snackBarOpen}\r\n                    setSnackBarOpen={setSnackBarOpen} \r\n                  /> */}\r\n                </form>\r\n\r\n              )\r\n            }}\r\n          </Formik>\r\n        )\r\n      }}\r\n    </Mutation>\r\n  </div>\r\n)}\r\n\r\nexport default CreateTourament\r\n","import React from 'react'\r\n\r\n//apollo\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core/'\r\n\r\nconst AvailableSpots = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <div style={{ margin: '1rem 0', color: 'black', width: 300 }}>\r\n        <Query\r\n          query={gql`\r\n            query {\r\n              teams {\r\n                id\r\n                organization_id\r\n                team_name\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <p>Loading...</p>\r\n            if (error) {\r\n              console.log(error)\r\n              throw error\r\n            }\r\n            return (\r\n              <div>\r\n                {data.teams.map((team) => (\r\n                  <h2 style={{\r\n                    color: 'rgba(0, 0, 0, 0.54)',\r\n                    display: 'flex', \r\n                    justifyContent: 'center', \r\n                    fontSize: '16px',\r\n                    border: '1px solid #BCBCBC',\r\n                    padding: '16px',\r\n                    borderRadius: '4px',\r\n                  }}>Available Spots: &nbsp;\r\n                    <div style={{\r\n                      color: 'black',\r\n                      textDecoration: 'underline',\r\n                      textDecorationColor: 'green',\r\n                      fontSize: '16px',\r\n                    }}\r\n                    >\r\n                     {team.id}\r\n                    </div>\r\n                  </h2>\r\n                ))}\r\n              </div>\r\n            )\r\n          }}\r\n        </Query>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AvailableSpots","import React from 'react'\r\n\r\n//apollo\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { OutlinedInput, InputLabel, Select, MenuItem } from '@material-ui/core/'\r\n\r\nconst SelectYourTeam = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <div style={{ margin: '1rem 0', color: 'black', width: 300 }}>\r\n        <InputLabel shrink>Select Your Team</InputLabel>\r\n        <Query\r\n          query={gql`\r\n            query {\r\n              teams {\r\n                id\r\n                organization_id\r\n                team_name\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <p>Loading...</p>\r\n            if (error) {\r\n              console.log(error)\r\n              throw error\r\n            }\r\n            return (\r\n              <Select\r\n                onChange={onChange}\r\n                value={value}\r\n                style={{ width: '300px' }}\r\n                name=\"team_id\"\r\n                input={<OutlinedInput />}\r\n              >\r\n                {data.teams.map((team) => (\r\n                  <MenuItem key={team.id} value={parseInt(team.id)}>\r\n                    {team.team_name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )\r\n          }}\r\n        </Query>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectYourTeam","import React, {useState} from 'react'\r\n\r\n//formik & yup\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n//apollo\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//material-ui\r\nimport { FormControl, Button } from '@material-ui/core/'\r\n\r\n//components\r\nimport SelectYourTeam from './SelectYourTeam';\r\n\r\n\r\nconst JoinTournament = () => {\r\n  return (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}\r\n  >\r\n\r\n    <Mutation\r\n      onError={error => {\r\n        alert(error)\r\n      }}\r\n      mutation={gql`\r\n        mutation($createMatch: NewMatchInput!) {\r\n          createMatch(input: $createMatch) {\r\n            match_id\r\n            team_id\r\n            goals_for\r\n            goals_against\r\n          }\r\n        }\r\n      `}\r\n    >\r\n      {(createMatch, { loading, error, data }) => {\r\n        if (loading) return <p>Loading...</p>\r\n        if (error) {\r\n          console.log(error)\r\n          return <p>Error :(</p>\r\n        }\r\n\r\n        return (\r\n\r\n          <Formik\r\n            initialValues={{\r\n              team_id: '',\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              console.log(values)\r\n              values = {\r\n                ...values,\r\n              }\r\n              createMatch({ variables: { createMatch: values } })\r\n              setSubmitting(false)\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              team_id: Yup.number().required('required'),\r\n            })}\r\n          >\r\n            {props => {\r\n              const { handleChange, handleSubmit, isSubmitting, values} = props\r\n              return (\r\n                <form\r\n                  onSubmit={handleSubmit}\r\n                  style={{\r\n                    width: '300px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <FormControl variant=\"outlined\">\r\n                    <SelectYourTeam \r\n                      value={values.team_id}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </FormControl>\r\n\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"secondary\"\r\n                    disabled={isSubmitting}\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      width: '100%',\r\n                      width: '75%',\r\n                      marginTop: 25,\r\n                      marginBottom: 25,\r\n                    }}\r\n                  >\r\n                    Join\r\n                  </Button>\r\n\r\n                </form>\r\n\r\n              )\r\n            }}\r\n          </Formik>\r\n        )\r\n      }}\r\n    </Mutation>\r\n  </div>\r\n)}\r\n\r\nexport default JoinTournament\r\n","import React from 'react'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core/'\r\n\r\nconst TeamsInTournament = () => (\r\n  <Query\r\n    query={gql`\r\n      query {\r\n        organization(id: 1) {\r\n          tournaments {\r\n            teams {\r\n              id\r\n              team_name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n  >\r\n    {({ loading, error, data }) => {\r\n      if (loading) return <div>Loading...</div>\r\n      if (error) {\r\n        throw error\r\n      }\r\n      return data.organization.tournaments.teams.map(team => {\r\n        return (\r\n          <ListItem key={team.id} button style={{ height: '75px' }}>\r\n            <ListItemIcon>Avatar</ListItemIcon>\r\n            <ListItemText\r\n              primary={team.team_name}\r\n            />\r\n          </ListItem>\r\n        )\r\n      })\r\n    }}\r\n  </Query>\r\n)\r\n\r\nexport default TeamsInTournament\r\n","import React from 'react'\r\n\r\n//router\r\nimport { Link } from 'react-router-dom'\r\n\r\n//components\r\nimport LogoutButton from '../LogoutButton'\r\nimport AvailableSpots from './AvailableSpots'\r\nimport JoinTournament from './JoinTournament'\r\nimport TeamsInTournament from './TeamsInTournament'\r\n\r\n//material-ui\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListSubheader,\r\n  Button\r\n} from '@material-ui/core/'\r\n\r\nconst useStyles = makeStyles({\r\n  tournamentPage: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    width: '300px',\r\n  },\r\n  tournamentTitle: {\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    fontSize: 16,\r\n    color: '#00aa25',\r\n    fontWeight: 'bold'\r\n  },\r\n  logoutBtn: {\r\n    marginBottom: 25,\r\n    textDecoration: 'none',\r\n  },\r\n  subHeader: {\r\n    borderBottom: '1px solid #00aa25',\r\n    overflow: 'hidden',\r\n    fontWeight: 'bold'\r\n  },\r\n  tournamentPageList: {\r\n    height: '175px',\r\n    overflowY: 'scroll',\r\n  },\r\n  createBtn: {\r\n    marginTop: 25,\r\n    textDecoration: 'none',\r\n  }\r\n})\r\n\r\nconst TournamentPage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tournamentPage}>\r\n\r\n      <Typography \r\n        className= {classes.tournamentTitle}\r\n        variant='overline'>\r\n        Tournaments\r\n      </Typography>\r\n   \r\n      <LogoutButton />\r\n\r\n      <Link style={{ marginBottom: 25, textDecoration: 'none', width: '50%' }} to=\"/\">\r\n        <Button\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Back To Home\r\n        </Button>\r\n      </Link>\r\n\r\n      {/* Available Spots Query */}\r\n      <AvailableSpots />\r\n\r\n      {/* Join Tournament Mutation */}\r\n      <JoinTournament />\r\n\r\n      <ListSubheader\r\n        className={classes.subHeader}\r\n        component='div'\r\n      >\r\n        Already Joined\r\n      </ListSubheader>\r\n\r\n      {/* Teams Already Joined Query */}\r\n      <List className={classes.tournamentPageList}>\r\n        {/* Uncomment the code below when we have tournament data */}\r\n        {/* <TeamsInTournament /> */}\r\n      </List>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TournamentPage;","import React, { useState } from 'react'\r\nimport './App.css'\r\n\r\n//react router\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport createBrowserHistory from 'history/createBrowserHistory'\r\n\r\n//apollo\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport apolloClient from './apolloClient'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\n//components\r\nimport Login from './Login-SignUp/Login'\r\nimport SignUp from './Login-SignUp/SignUp'\r\nimport HomePage from './Play-Game/HomePage'\r\nimport CreateGamePage from './Play-Game/CreateGamePage'\r\nimport CreateTournament from './Tournaments/CreateTournament'\r\nimport Tournament from './Tournaments/Tournament'\r\n\r\n//material-ui\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\nimport { unstable_Box as Box } from '@material-ui/core/Box'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#ffffff',\r\n      main: '#f9f9f9',\r\n      dark: '#c6c6c6',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      light: '#57dd57',\r\n      main: '#00aa25',\r\n      dark: '#007900',\r\n      contrastText: '#ffffff',\r\n    },\r\n  },\r\n})\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <ApolloProvider client={apolloClient}>\r\n        <MuiThemeProvider theme={theme}>\r\n          <Query\r\n            query={gql`\r\n              query {\r\n                authStatus @client {\r\n                  id\r\n                  isLoggedIn\r\n                }\r\n              }\r\n            `}\r\n          >\r\n            {({ loading, error, data }) => {\r\n              if (loading) return <div>Loading...</div>\r\n              if (error) {\r\n                throw error\r\n              }\r\n              const { isLoggedIn } = data.authStatus\r\n              return (\r\n                <Box className=\"App\" style={{ backgroundColor: '#f5f5f5' }}>\r\n                  {!isLoggedIn && (\r\n                    <Switch>\r\n                      <Route path=\"/\" exact component={Login} />\r\n                      <Route path=\"/sign-up\" exact component={SignUp} />\r\n                      <Redirect to=\"/\" />\r\n                    </Switch>\r\n                  )}\r\n\r\n                  {isLoggedIn && (\r\n                    <React.Fragment>\r\n                      <Route path=\"/\" exact component={HomePage} />} />\r\n                      <Redirect path=\"/sign-up\" to=\"/\" />\r\n                      <Route path=\"/create-game\" exact component={CreateGamePage} />\r\n                      <Route path=\"/create-tournament\" exact component={CreateTournament} />\r\n                      <Route path=\"/tournament\" exact component={Tournament} />\r\n                    </React.Fragment>\r\n                  )}\r\n                </Box>\r\n              )\r\n            }}\r\n          </Query>\r\n        </MuiThemeProvider>\r\n      </ApolloProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './material-ui-style'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}